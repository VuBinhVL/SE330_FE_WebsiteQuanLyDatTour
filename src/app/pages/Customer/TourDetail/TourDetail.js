// TourDetail.js
import { useState } from "react";
import { CiCalendar } from "react-icons/ci";
import {
  FaArrowLeft,
  FaArrowRight,
  FaCartPlus,
  FaHeart,
  FaUser,
} from "react-icons/fa";
import { IoLocationOutline } from "react-icons/io5";
import { LuAlarmClockCheck, LuTicketCheck } from "react-icons/lu";
import "./TourDetail.css";

const TourDetail = () => {
  const [currentImage, setCurrentImage] = useState(0);
  const [quantity, setQuantity] = useState(1);
  const [itineraryPage, setItineraryPage] = useState(0);

  const images = [
    "https://encrypted-tbn3.gstatic.com/licensed-image?q=tbn:ANd9GcT2ziQ7eoHcX8BPXfDX4TMViQwBiovNriw8zviO9TrrVxJ1tbgjNTX7dRGxkTWkj5DPn-GiT7lydv56c98n8EHmXVhHAfjdJdNDFtcNEDM",
    "https://lh3.googleusercontent.com/gps-cs-s/AC9h4nry5sKcnSck_TOz7ghdgZXtHqb0b2z4fAip922aB4ISKZnhSZhzVJuuNFKiqW2y3NKhi1TWyQb9jNo0fv7Fz2RB0AErJ9kmjFYO8efxi63lQgmSkF2UOGgHujYGpP9PUfXn18sJkw=w810-h468-n-k-no",
    "https://bizweb.dktcdn.net/100/474/438/products/tramy1206-232616012640-di-chuyen-di-lai-thai-lan-2.jpg?v=1714615748083",
  ];

  const itinerary = [
    {
      day: "Ng√†y 1",
      events: [
        { icon: "‚úàÔ∏è", name: "S√¢n bay T√¢n S∆°n Nh·∫•t", tag: "S√¢n bay" },
        { icon: "üåä", name: "S√¥ng Chao Phraya", tag: "S√¥ng su·ªëi" },
        { icon: "üè®", name: "Kh√°ch s·∫°n Bangkok", tag: "Kh√°ch s·∫°n" },
        { icon: "üè®", name: "Kh√°ch s·∫°n Bangkok", tag: "Kh√°ch s·∫°n" },
      ],
    },
    {
      day: "Ng√†y 2",
      events: [
        { icon: "üèØ", name: "Cung ƒëi·ªán ho√†ng gia", tag: "Di t√≠ch l·ªãch s·ª≠" },
        { icon: "üèñÔ∏è", name: "Bi·ªÉn Pattaya", tag: "B√£i bi·ªÉn" },
        { icon: "üèïÔ∏è", name: "L√†ng Nong Nooch", tag: "L√†ng ngh·ªÅ" },
        { icon: "üè®", name: "Kh√°ch s·∫°n Bangkok", tag: "Kh√°ch s·∫°n" },
      ],
    },
    {
      day: "Ng√†y 3",
      events: [
        { icon: "üèØ", name: "Cung ƒëi·ªán ho√†ng gia", tag: "Di t√≠ch l·ªãch s·ª≠" },
        { icon: "üèñÔ∏è", name: "Bi·ªÉn Pattaya", tag: "B√£i bi·ªÉn" },
        { icon: "üèïÔ∏è", name: "L√†ng Nong Nooch", tag: "L√†ng ngh·ªÅ" },
        { icon: "üè®", name: "Kh√°ch s·∫°n Bangkok", tag: "Kh√°ch s·∫°n" },
      ],
    },
    {
      day: "Ng√†y 4",
      events: [
        { icon: "üõï", name: "Ch√πa V√†ng", tag: "T√¥n gi√°o" },
        { icon: "üõçÔ∏è", name: "Ch·ª£ n·ªïi", tag: "Mua s·∫Øm" },
      ],
    },
  ];

  const totalPages = Math.ceil(itinerary.length / 3);

  const handlePrev = () => {
    setItineraryPage((prev) => Math.max(prev - 1, 0));
  };

  const handleNext = () => {
    setItineraryPage((prev) => Math.min(prev + 1, totalPages - 1));
  };

  return (
    <div className="tour-detail-container">
      <h2 className="tour-title">
        Th√°i Lan: Bangkok ‚Äì Pattaya (Ch·ª£ n·ªïi B·ªën Mi·ªÅn, ch√πa Ph·∫≠t L·ªõn, Khu du
        l·ªãch Suan Thai Pattaya...)
      </h2>

      <div className="tour-main">
        <div className="tour-image">
          <img src={images[currentImage]} alt="Tour" />
          <button
            className="image-nav left"
            onClick={() =>
              setCurrentImage(
                (currentImage - 1 + images.length) % images.length
              )
            }
          >
            <FaArrowLeft />
          </button>
          <button
            className="image-nav right"
            onClick={() => setCurrentImage((currentImage + 1) % images.length)}
          >
            <FaArrowRight />
          </button>
          <div className="heart-icon">
            <FaHeart />
          </div>
        </div>

        <div className="booking-panel">
          <h3>ƒê·∫∂T V√â</h3>
          <div className="booking-field">
            <label>Ng√†y ƒëi:</label>
            <input type="date" />
          </div>
          <div className="booking-field">
            <label>Gi√° v√©:</label>
            <span className="price">8.189.000 ƒë / Kh√°ch</span>
          </div>
          <div className="booking-field">
            <label>S·ªë l∆∞·ª£ng:</label>
            <div className="quantity-control">
              <button onClick={() => setQuantity(Math.max(1, quantity - 1))}>
                -
              </button>
              <span>
                <strong>{quantity}</strong> ng∆∞·ªùi
              </span>
              <button onClick={() => setQuantity(quantity + 1)}>+</button>
            </div>
          </div>
          <div className="booking-field">
            <label>T·ªïng ti·ªÅn:</label>
            <div className="booking-total">
              {(8189000 * quantity).toLocaleString()} ƒë
            </div>
          </div>

          <div className="booking-actions">
            <button className="btn-cart">
              <FaCartPlus /> Th√™m
            </button>
            <button className="btn-order">ƒê·∫∑t ngay ‚ûú</button>
          </div>

          <button className="btn-passenger">
            <FaUser /> Nh·∫≠p th√¥ng tin h√†nh kh√°ch
          </button>

          <div className="trip-info">
            <hr />
            <h6>
              <strong>TH√îNG TIN V·ªÄ CHUY·∫æN ƒêI</strong>
            </h6>
            <p>
              <IoLocationOutline className="icon" /> Kh·ªüi h√†nh:
              <b>TP. H·ªì Ch√≠ Minh</b>
            </p>
            <p>
              <IoLocationOutline className="icon" /> ƒêi·ªÉm ƒë·∫øn: <b>ƒê√† N·∫µng</b>
            </p>
            <p>
              <LuAlarmClockCheck /> Th·ªùi gian: <b>5N4ƒê</b>
            </p>
            <p>
              <CiCalendar /> Ng√†y k·∫øt th√∫c: <b>T6, 18 th√°ng 4, 2025</b>
            </p>
            <p>
              <LuTicketCheck /> S·ªë ch·ªó c√≤n tr·ªëng: <b>41</b>
            </p>
            <p>
              <IoLocationOutline className="icon" /> ƒêi·ªÉm xu·∫•t ph√°t:{" "}
              <b>S√¢n bay T√¢n S∆°n Nh·∫•t</b>
            </p>
            <p>
              <LuAlarmClockCheck /> Gi·ªù xu·∫•t ph√°t: <b>15:05</b>
            </p>
          </div>
        </div>
      </div>

      <div className="itinerary-section">
        <div className="itinerary-title">L·ªäCH TR√åNH</div>
        <div className="itinerary-controls">
          <button onClick={handlePrev}>
            <FaArrowLeft />
          </button>
          <button onClick={handleNext}>
            <FaArrowRight />
          </button>
        </div>

        <div className="itinerary-slider">
          {itinerary
            .slice(itineraryPage * 3, itineraryPage * 3 + 3)
            .map((day, index) => (
              <div className="day-column" key={index}>
                <h4>* {day.day}</h4>
                <ul>
                  {day.events.map((event, idx) => (
                    <li key={idx}>
                      <span className="icon">{event.icon}</span>
                      {event.name}
                      <span className="tag">{event.tag}</span>
                    </li>
                  ))}
                </ul>
              </div>
            ))}
        </div>
      </div>
    </div>
  );
};

export default TourDetail;
